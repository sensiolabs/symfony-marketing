{% block title 'Warum sollte ich ein Framework benutzen?' %}
{% block keywords '' %}
{# TODO: {% block description 'What is Symfony - Start here if you want a brief explanation' %} #}

{% block intro %}
    <p>
        Ein Framework ist nicht unbedingt notwendig: es ist "nur" eines der Werkzeuge, um besser
        und schneller entwickeln zu können!
        <br />
        Besser, da ein Framework Ihnen Gewissheit bietet, eine Anwendung schreiben zu können,
        die perfekt zu Ihren Unternehmensregeln passt, zudem strukturiert, wartbar und leicht zu aktualisieren ist.
        <br />
        Schneller, da generische Module wiederverwendet werden können und Entwickler somit Zeit haben sich auf
        das Wesentliche zu konzentrieren ohne sich dabei an das Framework zu binden.
    </p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">Investieren Sie in die Aufgaben, nicht in die Technologie</h2>
    <p>
        Das Grundprinzip eines Frameworks lautet: Nicht das Rad neu zu erfinden.
        Schaffen Sie sich Aufgaben mit niedrigem Wert ab (zum Beispiel die Erstellung von generischen Komponenten)
        um sich komplett auf die Unternehmensregeln konzentrieren zu können.
    </p>
    <p>
        Als Beispiel erspart ein Framework einem Entwickler 2 bis 3 Tage Zeit, um ein Authentifizierungs-Formular
        zu erstellen (was einer generischen Aufgabe entspricht).
        Die gesparte Zeit kann für spezifischere Komponenten inklusive entsprechender Unit-Tests verwendet werden;
        Zeit um soliden, zukunftssicheren Code in hoher Qualität zu schreiben.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">Garantierte Erweiterbarkeit und Wartung</h2>
    <p>
        Auf längerer Sicht ermöglicht ein Framework die Langlebigkeit Ihrer Anwendungen.
        Nur wenn ein Entwickler-Team gut funktioniert, wird es in der Lage sein
        eine Anwendung leicht warten und aktualisieren zu können.
    </p>
    <p>
        Die Struktur eines Frameworks ermöglicht, dass eine Anwendung jederzeit von einem Entwickler,
        egal ob er an dessen Entwicklung teilgenommen hat, schnell übernommen werden kann,
        um sie im Laufe der Zeit zu warten oder zu aktualisieren.
    </p>
    <p>
        In dieser Hinsicht ist ein Framework keine Black Box!
        Im Falle von Symfony ist es immer noch PHP ... Die entwickelten Anwendungen sind
        nicht auf das Symfony Universum beschränkt und sind
        <a href="{{ marketing_path('six_good_reasons') }}#interoperable">kompatibel</a>
        mit anderen PHP-Bibliotheken.
    </p>
{% endblock %}

{% block summary %}
    <p>Ein Framework ist nicht zwingend erforderlich, aber auf jeden Fall sehr nützlich.</p>
    <p>Ein Framework ist eine Bürgschaft an Qualität, Aktualisierbarkeit und Wartbarkeit von Anwendungen zu geringen Kosten.</p>
    <p>Über ein Framework entwickelte Anwendungen sind kompatibel mit am Markt vorherrschenden Standards.</p>
{% endblock %}
