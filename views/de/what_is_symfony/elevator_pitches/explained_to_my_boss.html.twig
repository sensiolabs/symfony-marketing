{% block title 'Symfony erklärt für meinen Chef' %}
{% block keywords '' %}
{% block description '' %}

{% block intro %}
    <p>Symfony2 ist ein PHP-Framework - ein Framework um in PHP Webseiten oder Anwendungen zu entwickeln.</p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">Symfony vs. CMS und fertige Lösungen</h2>
    <p>
        Ein Framework, ein CMS (Content Management System) oder fertige Lösungen
        teilen sich weder die gleichen Anforderungen, noch benötigen Sie den gleichen Aufwand
        oder Know-how.
    </p>
    <p>
        Mit <strong>fertigen Lösungen</strong> ist es einfach:
        Neben der Möglichkeit ein paar Parameter ändern zu können, müssen sich Unternehmen
        mit den verfügbaren Features zufrieden geben, welche allerdings, für die ursprünglich
        definierten Anforderungen, zu eingeschränkt sein können. Oder anders herum können sie auch viel zu
        zahlreich sein.
        Abgesehen von dem Aufwand es in das bestehende System zu integrieren, benötigt eine fertige Lösung
        ansonsten nicht viel technisches Know-how.
    </p>
    <p>
        Ein <strong>CMS</strong> und seine Erweiterungen können kaum dafür verwendet werden,
        eine Website oder Anwendung so zu gestalten, um den Unternehmensanforderungen zu entsprechen.
        Es sei denn alle benötigten Erweiterungen sind verfügbar und werden noch gepflegt.
    </p>
    <p>
        Ein <strong>Framework</strong> bietet all die Flexibilität für individuelle Entwicklung
        und kann dafür benutzt werden eine Anwendung exakt auf die definierten Bedürfnisse zuzuschneiden.
        Dafür ist jedoch Wissen in den Bereichen Entwicklung, Integration und Wartung notwendig.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">Symfony: Entwicklungstools</h2>
    <p>
        Ganz egal ob eine PHP-Anwendung von Grund auf selbst geschrieben oder ein Framework verwendet wurde, es bleibt
        eine PHP-Anwendung. Und in beiden Fällen wird technisches Wissen benötigt.
        Dennoch garantiert die Verwendung von einem Framework, dass eine Anwendung Industrie-Standards folgt,
        gut strukturiert, wartbar und skalierbar ist.
        Durch wiederverwendbare Module, kann Entwicklerzeit gespart werden, sodass sie sich auf
        unternehmensspezifische Features konzentrieren können.
    </p>
{% endblock %}
