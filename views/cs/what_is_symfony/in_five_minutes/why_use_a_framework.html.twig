{% block title 'Proč bych měl použít framework?' %}
{% block keywords '' %}
{% block description '' %}

{% block intro %}
    <p>
        Framework není vždy nezbytně nutný: je to jen jeden z mnoha nástrojů, které
        vám pomohou vyvíjet lépe a rychleji!
        <br />
        Lépe, protože máte jistotu, že vyvíjíte aplikaci, která je plně v souladu
        s bussines pravidly, která je strukturovaná a je jak udržovatelná, tak rozšiřitelná.
        <br />
        Rychlejší, protože vývojářům ušetří čas tím, že mohou využívat znovu použitelné
        moduly, a mohou se tak soustředit na jiné oblasti vývoje či na skutečný problém,
        který potřebují řešit, aniž by však byli frameworkem nějak svázaní.
    </p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">Investice do úkolu, ne do technologie</h2>
    <p>
        Toto je základní princip frameworku: Nevymýšlet znovu kolo. Skoncovat s
        úkoly s nízkou přidanou hodnotou (vývoj obecně použitelných komponent) za
        účelem soustředit se čistě na skutečnou hodnotu a reálné problémy, které
        jsou zásadní pro vás či vaši firmu.
    </p>
    <p>
        Například, framework vás zbaví nutnosti trávit 2 nebo 3 dny vytvářením
        autentizačního formuláře (což není specifický úkol). Čas, který tímto ušetříte
        pak může být věnován na více specifické komponenty vašeho systému nebo na
        odpovídající jednotkové testy (unit testy). To vše vám pak zajistí udržitelný
        a vysoce kvalitní zdrojový kód.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">Garantovaná možnost rozšíření a údržby</h2>
    <p>
        Framework vám obecně v delším časovém horizontu zajistí dlouhou životnost
        vaší aplikace. Pokud vývojový tým pracuje jak se mu zachce a nedodržuje
        obecné zásady a standardy, pouze tento tým bude schopný dále snadno spravovat
        a rozšiřovat aplikaci. To je případ, kdy tvůrce řešení poskytuje své vlastní
        proprietární řešení.
    </p>
    <p>
        Na druhou stranu, struktura, kterou framework nabízí a zajišťuje, vám pomůže
        se společně vyhnout této pasti a usnadňuje každému vývojáři (ať už se podílel
        na vývoji nebo ne) snadno "přijmout" aplikaci, snadno ji v průběhu času
        spravovat a udržovat a v neposlední řadě ji rychle a čistě rozšiřovat, kdykoli
        je to potřeba.
    </p>
    <p>
        Framework tedy v tomto ohledu rozhodně není černá skříňka! V případě Symfony,
        se stále jedná o PHP&hellip; Aplikace, které jsou na Symfony frameworku postavené,
        nejsou ničím omezené a nejsou uvězněné v jeho ekosystému a jsou
        <a href="{{ marketing_path('six_good_reasons') }}#interoperable">přirozeně interoperabilní</a>
        např. s jakoukoli další knihovnou PHP.
    </p>
{% endblock %}

{% block summary %}
    <p>Framework není absolutní nutností, ale přesto může být velice užitečný.</p>
    <p>Framework je zárukou kvality, rozšiřitelnosti a udržovatelnosti aplikace při udržení nízkých nákladů.</p>
    <p>Aplikace postavené na frameworku jsou v souladu s tržními standardy a jsou vysoce interoperabilní.</p>
{% endblock %}
