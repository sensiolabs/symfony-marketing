{% block title 'Symfony explicado ao meu Patrão' %}
{% block keywords '' %}
{% block description 'Symfony explicado ao meu Patrão' %}

{% block intro %}
    <p>Symfony 2 é uma framework PHP - uma framework para desenvolver websites e aplicações escritas em PHP.</p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">Symfony vs. CMS e softwares em pacote</h2>
    <p>
        Uma framework, um CMS (Content Management System), e uma solução
        em pacote não cumpre com as mesmas necessidades ou requerem o
        mesmo investimento e/ou experiência.
    </p>
    <p>
        Com um <strong>software de pacotes</strong>, é simples: à parte
        de alterar alguns parâmetros, as empresas devem estar contentes
        com os recursos/funcionaldiades disponibilizadas, o que pode ser
        mais limitado do que foi inicialmente definido, ou o oposto,
        em maior número. Tirando a parte da integração no atual sistema,
        escolher pacotes de software requer muito pouca experiência técnica.
    </p>
    <p>
        Um <strong>CMS</strong> e os seus modulos adicionais podem ser usados
        para desenhar website e aplicações que podem ficar muito próximos às
        necessidades do negócio, desde que os modulos necessários estejam
        sempre disponíveis e sejam mantidos!
    </p>
    <p>
        Uma <strong>framework</strong> oferece toda a flexibilidade de um
        desenvolvimento à medida e pode ser usado para desenhar aplicações
        que encaixem na perfeição as necessidades do negócio. No entanto,
        esta requer, desenvolvimento, integração, manutenção  e experiência
        técnica.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">Symfony: Ferramentas de desenvolvimento</h2>
    <p>
        Seja escrito à mão ou desenvolvido usando uma framework, uma
        aplicação PHP é sempre uma aplicação em PHP. E em ambos os casos
        requer experiência técnica. No entanto, a presença de uma framework
        garante que a aplicação segue as regras da indústria, além de ser
        bem estruturada, mantida e escalável. Além disso poupa tempo aos
        programadores, usando modulos genéricos reutilizáveis, para
        que eles se possam focar nas necessidades específicas do negócio.
    </p>
{% endblock %}
