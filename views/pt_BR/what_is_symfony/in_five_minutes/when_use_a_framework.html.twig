{% block title 'Quando devo usar um framework?' %}
{% block keywords '' %}
{% block description 'Quando devo usar um framework?' %}

{% block intro %}
    <p>
        Bem... sempre que precisar, durante o desenvolvimento de uma aplicação web ou um site, é claro!
    </p>
    <p>
        Por que você faria um pedaço personalizado de móveis se pudesse encontrar um que combina perfeitamente
        com a sua decoração, direto da prateleira? O mesmo é verdadeiro para aplicações de computador:
        Antes de mergulhar na criação de uma framework, um pequeno trabalho de pesquisa está preparado.
    </p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">Necessidades gerais vs. funções específicas</h2>
    <p>
        Além de um framework, há outras soluções que estão disponíveis para desenvolver sites
        e aplicativos web: CMSs (Sistemas de Gerenciamento de Conteúdo) e seus módulos complementares,
        bem como, pacotes de soluções profissionais (CRM, soluções de comércio eletrônico, etc.).
        Se os seus recursos nativos atendem perfeitamente as suas necessidades imediatas e futuras, não
        há dúvida sobre isso: Vá em frente! Não há nenhum ponto em reinventar a roda.
    </p>
    <p>
        Por outro lado, quando existem necessidades específicas, regras de negócios específicas ou mesmo a
        necessidade de misturar blocos de construção (conteúdo e e-commerce, por exemplo), uma solução de
        framework é necessária: ele permite que seja desenvolvido um aplicativo que combina perfeitamente
        com as suas necessidades atuais, sem deixar de ser inovador.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">As perguntas certas</h2>
    <p>
        Para certificar-se de que você está fazendo a escolha correta, tanto a curto como a longo prazo,
        é necessário fazer as perguntas certas:
    </p>
    <ol>
        <li>Quais são as minhas necessidades atuais? Elas são cobertas por um pacote de soluções?</li>
        <li>Quais as habilidades que eu preciso, se eu escolher um framework?</li>
        <li>A solução desenvolvida será atualizável?</li>
    </ol>
    <p>
        E, finalmente, não cair na armadilha da "aparente simplicidade dos requisitos".
        Em muitos casos, torna-se rapidamente evidente que tanto as regras de negócio quanto as funções
        a serem implementadas não são tão simples de instaurar.
    </p>
    <p>
        A propósito, o Symfony também está muito bem adaptado para "mini-projetos".
    </p>
{% endblock %}

{% block summary %}
    <p>Um framework pode ser adaptado a todos os requisitos.</p>
    <p>... mas isso nem sempre é necessário, especialmente quando os requisitos são de natureza mais genérica.</p>
    <p>Antes de fazer sua seleção, realize um mapeamento das suas necessidades atuais e futuras em detalhes, e, então, compare as várias soluções disponíveis no mercado.</p>
{% endblock %}
