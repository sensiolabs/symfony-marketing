{% block title 'Symfony explicado ao meu Patrão' %}
{% block keywords '' %}
{% block description 'Symfony explicado ao meu Patrão' %}

{% block intro %}
    <p>O Symfony 2 é um framework PHP - um framework para desenvolver websites e aplicações escritas em PHP.</p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">Symfony vs. CMS e softwares em pacote</h2>
    <p>
        Um framework, um CMS (Content Management System), e uma solução
        em pacote não satisfazem as mesmas necessidades ou requerem o
        mesmo investimento e/ou experiência.
    </p>
    <p>
        Com um <strong>software de pacotes</strong>, é simples: além
        de alterar alguns parâmetros, as empresas devem estar contentes
        com os recursos/funcionaldiades disponibilizadas, o que pode ser
        mais limitado do que foi inicialmente definido, ou o oposto,
        em maior número. Tirando a parte da integração no atual sistema,
        escolher pacotes de software requer bem pouca experiência técnica.
    </p>
    <p>
        Um <strong>CMS</strong> e os seus módulos adicionais, podem ser usados
        para desenhar websites e aplicações que podem ficar muito próximas das
        necessidades do negócio, desde que os módulos necessários estejam
        sempre disponíveis e sejam mantidos!
    </p>
    <p>
        Um <strong>framework</strong> oferece toda a flexibilidade de um
        desenvolvimento sob medida e pode ser usado para desenhar aplicações
        que se encaixem com perfeição às necessidades do negócio. No entanto,
        requer desenvolvimento, integração, manutenção e experiência
        técnica.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">Symfony: Ferramentas de desenvolvimento</h2>
    <p>
        Seja escrito à mão ou desenvolvido usando um framework, uma
        aplicação PHP é sempre uma aplicação em PHP. E, em ambos os casos,
        requer experiência técnica. No entanto, a presença de um framework
        garante que a aplicação segue as regras da indústria, além de ser
        bem estruturada, de fácil manutenção e escalável. Além disso, poupa tempo aos
        desenvolvedores, usando módulos genéricos reutilizáveis, para
        que eles possam focar nas necessidades específicas do negócio.
    </p>
{% endblock %}
