{% block title 'When should I use a framework?' %}
{% block keywords '' %}
{% block description '' %}

{% block intro %}
    <p>
        Well... Whenever you need to, while developing a web application or a site, of course!
    </p>
    <p>
        Why would you have a custom piece of furniture made if you could find one that perfectly
        matches your décor, right off the shelf?  The same is true for computer applications:
        Before you dive in to create a framework, a little survey work is in order.
    </p>
{% endblock %}

{% block body1 %}
    <h2 class="title_09">General needs vs. specific functions</h2>
    <p>
        Besides a framework, there are other solutions that are available to develop both Web
        sites and Web applications:  CMSs (Content Management System) and their supplemental
        modules, as well as packaged professional solutions (CRM, e-commerce solutions, etc.).
        If their native features line up perfectly with your immediate and future needs, no
        question about it: Go for it!  There is no point in reinventing the wheel.
    </p>
    <p>
        On the other hand, when there are specific needs, specific business rules or even the
        need to mix building blocks (content and e-commerce, for example), a framework solution
        is necessary: it allows an application to be developed that perfectly matches your
        current needs, while still being innovative.
    </p>
{% endblock %}

{% block body2 %}
    <h2 class="title_09">The right questions</h2>
    <p>
        To make sure that you are making the right choice, both for the short as well as the
        long term, it is necessary to ask the right questions:
    </p>
    <ol>
        <li>What are my current needs?  Are they covered by a packaged solution?</li>
        <li>What skills do I need if I choose a framework?</li>
        <li>Will the developed solution be upgradeable?</li>
    </ol>
    <p>
        And finally, don’t fall into the trap of the “apparent simplicity of the requirements.”
        In many cases it quickly becomes apparent that both the business rules and functions
        to be implemented are just not so simple to put in place.
    </p>
    <p>
        By the way, Symfony is also very well suited for “mini-projects.”
    </p>
{% endblock %}

{% block summary %}
    <p>A framework can be tailored to all requirements.</p>
    <p>...but that is not always necessary, especially when the requirements are of a more generic nature.</p>
    <p>Before making your selection, map out your current and future requirements in detail, and then compare the various solutions available on the market.</p>
{% endblock %}
